'use client';

import { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import Button from '@/shared/components/Button';
import { useToast } from '@/shared/components/ui/use-toast';
import { styles } from '@/shared/styles/constants';
import { instruments, questions } from '../data/quizData';
import Image from 'next/image';
import { transitions } from '@/config/transitions';

// –ú–∞—Å—Å–∏–≤ —ç–º–æ–¥–∑–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å –∏—Ö –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º
// –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç:
// - emoji: —Å–∏–º–≤–æ–ª —ç–º–æ–¥–∑–∏
// - className: –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (absolute) –∏ —Ä–∞–∑–º–µ—Ä (text-4xl = 2.25rem = 36px)
const instrumentEmojis = [
  { emoji: 'üé∏', className: 'absolute top-[8%] left-[12%] text-4xl' },
  { emoji: 'ü•Å', className: 'absolute top-[45%] right-[8%] text-4xl' },
  { emoji: 'üéπ', className: 'absolute bottom-[15%] left-[23%] text-4xl' },
  { emoji: 'üé∏', className: 'absolute top-[67%] right-[15%] text-4xl' },
  { emoji: 'ü•Å', className: 'absolute top-[25%] left-[18%] text-4xl' },
  { emoji: 'üéπ', className: 'absolute bottom-[33%] right-[22%] text-4xl' },
  { emoji: 'üé∏', className: 'absolute bottom-[42%] left-[7%] text-4xl' },
  { emoji: 'üé∏', className: 'absolute top-[38%] right-[23%] text-4xl' },
  { emoji: 'ü•Å', className: 'absolute bottom-[12%] right-[9%] text-4xl' },
  { emoji: 'üéπ', className: 'absolute top-[50%] left-[20%] text-4xl' },
  { emoji: 'üéπ', className: 'absolute bottom-[68%] right-[17%] text-4xl' },
];

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —ç–º–æ–¥–∑–∏
 * –ê–Ω–∏–º–∞—Ü–∏—è:
 * - –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: –Ω–µ–≤–∏–¥–∏–º—ã–π –∏ —É–º–µ–Ω—å—à–µ–Ω–Ω—ã–π (opacity: 0, scale: 0)
 * - –ê–Ω–∏–º–∞—Ü–∏—è: –ø—É–ª—å—Å–∞—Ü–∏—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ (0.2-0.4) –∏ —Ä–∞–∑–º–µ—Ä–∞ (0.8-1.2)
 * - –ü–æ–≤–æ—Ä–æ—Ç: –æ—Ç -10 –¥–æ 10 –≥—Ä–∞–¥—É—Å–æ–≤
 * - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: —Å–ª—É—á–∞–π–Ω–∞—è –æ—Ç 2 –¥–æ 4 —Å–µ–∫—É–Ω–¥
 * - –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —Å —Ä–µ–≤–µ—Ä—Å–æ–º
 */
function AnimatedEmoji({ emoji, className }: { emoji: string; className?: string }) {
  return (
    <motion.div
      initial={{ opacity: 0, scale: 0 }}
      animate={{ 
        opacity: [0.2, 0.4],
        scale: [0.8, 1.2],
        rotate: [-10, 10],
      }}
      transition={{
        duration: Math.random() * 2 + 2,
        repeat: Infinity,
        repeatType: "reverse",
        ease: "easeInOut"
      }}
      className={className}
    >
      {emoji}
    </motion.div>
  );
}

export function QuizSection() {
  const [currentStep, setCurrentStep] = useState(0);
  const [selectedInstrument, setSelectedInstrument] = useState<string | null>(null);
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [answers, setAnswers] = useState<Record<string, string>>({});
  const { toast } = useToast();

  const handleStart = () => {
    setCurrentStep(1);
  };

  const handleReset = () => {
    setCurrentStep(0);
    setSelectedInstrument(null);
    setCurrentQuestion(0);
    setAnswers({});
  };

  const handleInstrumentSelect = (instrument: string) => {
    setSelectedInstrument(instrument);
    setCurrentStep(2);
  };

  const formatQuestion = (question: string) => {
    return question.replace(/\{(\w+)\}/g, (match, key) => answers[key] || match);
  };

  const getCurrentAnswers = (question: any) => {
    if (!question.dynamic_answers || !answers[question.key]) {
      return question.answers;
    }

    const dynamicAnswers = question.dynamic_answers[answers[question.key]] || [];
    return [...question.answers, ...dynamicAnswers];
  };

  const handleAnswer = (answer: string) => {
    if (!selectedInstrument) return;
    
    const currentQuestions = questions[selectedInstrument];
    if (!currentQuestions) return;

    const question = currentQuestions[currentQuestion];
    if (!question) return;

    setAnswers(prev => ({
      ...prev,
      [question.key]: answer
    }));

    if (currentQuestion < currentQuestions.length - 1) {
      // Skip questions with unmet conditions
      let nextQuestion = currentQuestion + 1;
      while (
        nextQuestion < currentQuestions.length &&
        currentQuestions[nextQuestion].condition &&
        answers[currentQuestions[nextQuestion].condition.key] !== currentQuestions[nextQuestion].condition.value
      ) {
        nextQuestion++;
      }
      setCurrentQuestion(nextQuestion);
    } else {
      toast({
        title: '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã!',
        description: '–ú—ã –ø–æ–¥–æ–±—Ä–∞–ª–∏ –¥–ª—è –≤–∞—Å –∏–¥–µ–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –æ–±—É—á–µ–Ω–∏—è –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.',
      });
      // Reset quiz
      setCurrentStep(0);
      setSelectedInstrument(null);
      setCurrentQuestion(0);
      setAnswers({});
    }
  };

  const renderContent = () => {
    switch (currentStep) {
      case 0:
        return (
          // –ù–∞—á–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω
          // - space-y-6: –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ 1.5rem (24px)
          <div className="space-y-6">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫
                - text-[32px]: —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞
                - font-bold: –∂–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç */}
            <div className="space-y-2">
              <h3 className="text-[32px] font-bold">
                –ü–†–û–ô–î–ò –¢–ï–°–¢ –ò –£–ó–ù–ê–ô,
              </h3>
              {/* –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∂–µ–ª—Ç—ã–º —Ç–µ–∫—Å—Ç–æ–º
                  - text-yellow-400: –∂–µ–ª—Ç—ã–π —Ü–≤–µ—Ç */}
              <p className="text-[32px] font-bold text-yellow-400">
                –ö–ê–ö–û–ô –ú–£–ó–´–ö–ê–õ–¨–ù–´–ô<br />
                –ò–ù–°–¢–†–£–ú–ï–ù–¢ –¢–ï–ë–ï –ü–û–î–•–û–î–ò–¢
              </p>
            </div>
            {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
                - flex justify-center: —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ */}
            <div className="flex justify-center">
              <Image
                src="/icons/thinking.png"
                alt="thinking"
                width={250}
                height={250}
              />
            </div>
            {/* –ö–Ω–æ–ø–∫–∞ "–ü–û–ï–•–ê–õ–ò!"
                - bg-[#FF0000]: –∫—Ä–∞—Å–Ω—ã–π —Ñ–æ–Ω
                - hover:bg-[#CC0000]: —Ç–µ–º–Ω–æ-–∫—Ä–∞—Å–Ω—ã–π –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
                - w-[208px] h-[77px]: —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
                - rounded-full: –ø–æ–ª–Ω–æ–µ —Å–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤
                - text-xl: —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ */}
            <Button
              onClick={handleStart}
              className="bg-[#FF0000] w-[208px] h-[77px] hover:bg-[#CC0000] text-white px-8 py-3 rounded-full text-xl"
            >
              –ü–û–ï–•–ê–õ–ò!
            </Button>
          </div>
        );
      case 1:
        return (
          // –≠–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
          <div className="space-y-6">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫
                - text-xl: —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞
                - mb-6: –æ—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É 1.5rem (24px) */}
            <h3 className="text-xl font-bold text-center mb-6">
              –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç:
            </h3>
            {/* –°–µ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
                - grid gap-4: –æ—Ç—Å—Ç—É–ø—ã –º–µ–∂–¥—É –∫–Ω–æ–ø–∫–∞–º–∏ 1rem (16px) */}
            <div className="grid gap-4">
              {instruments.map((instrument) => (
                // –ö–Ω–æ–ø–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
                // - w-full: –ø–æ–ª–Ω–∞—è —à–∏—Ä–∏–Ω–∞
                // - bg-[#FF4B26]: –æ—Ä–∞–Ω–∂–µ–≤—ã–π —Ñ–æ–Ω
                // - hover:bg-[#FF0000]: –∫—Ä–∞—Å–Ω—ã–π –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
                // - min-h-[60px]: –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞
                // - z-20: –ø–æ–≤–µ—Ä—Ö –¥—Ä—É–≥–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                <Button
                  key={instrument}
                  onClick={() => handleInstrumentSelect(instrument)}
                  variant="primary"
                  className="w-full text-left text-lg py-4 px-6 bg-[#FF4B26] border-none text-white hover:bg-[#FF0000] transition-all whitespace-normal break-words min-h-[60px] flex items-center relative z-20"
                >
                  {instrument}
                </Button>
              ))}
            </div>
          </div>
        );
      case 2:
        if (!selectedInstrument) return null;
        const currentQuestions = questions[selectedInstrument];
        const question = currentQuestions[currentQuestion];
        if (!question) return null;

        // Skip questions with unmet conditions
        if (
          question.condition &&
          answers[question.condition.key] !== question.condition.value
        ) {
          handleAnswer('');
          return null;
        }
        
        return (
          // –≠–∫—Ä–∞–Ω –≤–æ–ø—Ä–æ—Å–æ–≤
          <div className="space-y-6">
            {/* –¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞
                - text-xl: —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞
                - mb-6: –æ—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É 1.5rem (24px) */}
            <h3 className="text-xl font-bold text-center mb-6">
              {formatQuestion(question.question)}
            </h3>
            {/* –°–µ—Ç–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤
                - grid gap-4: –æ—Ç—Å—Ç—É–ø—ã –º–µ–∂–¥—É –∫–Ω–æ–ø–∫–∞–º–∏ 1rem (16px) */}
            <div className="grid gap-4">
              {getCurrentAnswers(question).map((answer) => (
                // –ö–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—Ç–∞ (—Å—Ç–∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã –∫–Ω–æ–ø–∫–∞–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤)
                <Button
                  key={answer}
                  onClick={() => handleAnswer(answer)}
                  variant="primary"
                  className="w-full text-left text-lg py-4 px-6 bg-[#FF4B26] border-none text-white hover:bg-[#FF0000] transition-all whitespace-normal break-words min-h-[60px] flex items-center relative z-20"
                >
                  {answer}
                </Button>
              ))}
            </div>
          </div>
        );
    }
  };

  const topTransition = transitions.quiz?.top;
  const bottomTransition = transitions.quiz?.bottom;

  return (
    // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–µ–∫—Ü–∏–∏
    // - bg-[#FF4B26]: –æ—Ä–∞–Ω–∂–µ–≤—ã–π —Ñ–æ–Ω
    // - py-20: –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã 5rem (80px)
    // - overflow-hidden: —Å–∫—Ä—ã—Ç–∏–µ –≤—ã—Ö–æ–¥—è—â–µ–≥–æ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    <section className="relative bg-[#FF4B26] text-white py-20 overflow-hidden" id="quiz">
      {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –Ω–æ—Ç—ã
          - absolute inset-0: —Ä–∞—Å—Ç—è–≥–∏–≤–∞–Ω–∏–µ –Ω–∞ –≤—Å—é —Å–µ–∫—Ü–∏—é
          - pointer-events-none: –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –º—ã—à–∏ */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        {/* –ù–æ—Ç—ã —Ä–∞–∑–º–µ—â–µ–Ω—ã –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥—Ä—É–≥–∏–º —Å–µ–∫—Ü–∏—è–º */}
        <Image
          src="/icons/note1.svg"
          alt="Musical note"
          width={53}
          height={53}
          className="absolute top-[5%] left-[15%] rotate-[-15deg]"
        />
        <Image
          src="/icons/note2.svg"
          alt="Musical note"
          width={40}
          height={40}
          className="absolute top-[8%] right-[20%] rotate-[25deg]"
        />
        <Image
          src="/icons/note3.svg"
          alt="Musical note"
          width={45}
          height={45}
          className="absolute top-[12%] left-[40%] rotate-[10deg]"
        />

        {/* Left side notes */}
        <Image
          src="/icons/note2.svg"
          alt="Musical note"
          width={47}
          height={47}
          className="absolute top-[50%] left-[3%] rotate-[-20deg]"
        />
        <Image
          src="/icons/note1.svg"
          alt="Musical note"
          width={43}
          height={43}
          className="absolute top-[70%] left-[5%] rotate-[15deg]"
        />

        {/* Right side notes */}
        <Image
          src="/icons/note3.svg"
          alt="Musical note"
          width={50}
          height={50}
          className="absolute top-[45%] right-[4%] rotate-[-10deg]"
        />
        <Image
          src="/icons/note2.svg"
          alt="Musical note"
          width={45}
          height={45}
          className="absolute top-[65%] right-[6%] rotate-[20deg]"
        />

        {/* Bottom area notes */}
        <Image
          src="/icons/note1.svg"
          alt="Musical note"
          width={43}
          height={43}
          className="absolute bottom-[5%] left-[90%] rotate-[-25deg]"
        />
        <Image
          src="/icons/note3.svg"
          alt="Musical note"
          width={47}
          height={47}
          className="absolute bottom-[30%] right-[48%] rotate-[15deg]"
        />
        <Image
          src="/icons/note2.svg"
          alt="Musical note"
          width={40}
          height={40}
          className="absolute bottom-[2%] right-[47%] rotate-[-15deg]"
        />
      </div>

      {/* –í–µ—Ä—Ö–Ω–∏–π –∏ –Ω–∏–∂–Ω–∏–π –ø–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É —Å–µ–∫—Ü–∏—è–º–∏ */}
      {topTransition && (
        <div
          className={topTransition.className}
          style={{
            height: topTransition.height,
            backgroundColor: topTransition.backgroundColor
          }}
        >
          <Image
            src={topTransition.image}
            alt="Top transition"
            width={1440}
            height={topTransition.height}
            className="w-full h-full object-cover"
          />
        </div>
      )}

      {bottomTransition && (
        <div
          className={bottomTransition.className}
          style={{
            height: bottomTransition.height,
            backgroundColor: bottomTransition.backgroundColor
          }}
        >
          <Image
            src={bottomTransition.image}
            alt="Bottom transition"
            width={1440}
            height={bottomTransition.height}
            className="w-full h-full object-cover"
          />
        </div>
      )}

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
          - styles.container.narrow: —É–∑–∫–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ–º
          - space-y-12: –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã 3rem (48px)
          - mb-24: –æ—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É 6rem (96px) */}
      <div className={styles.container.narrow}>
        <div className="relative z-10 flex flex-col items-center space-y-12 text-center mb-24">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫
              - text-4xl md:text-[64px]: –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞
              - mt-12: –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É 3rem (48px) */}
          <h2 className="text-4xl md:text-[64px] font-bold mt-12">
            <span className="text-black">–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç </span>
            <span className="text-white">–ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å?</span>
          </h2>
          
          {/* –ß–µ—Ä–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
              - bg-black: —á–µ—Ä–Ω—ã–π —Ñ–æ–Ω
              - rounded-3xl: —Å–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤ 1.5rem (24px)
              - p-8: –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã 2rem (32px)
              - max-w-4xl: –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ */}
          <div className="bg-black rounded-3xl p-8 w-full max-w-4xl mx-auto relative">
            {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –º–æ–ª–Ω–∏–∏ –ø–æ —É–≥–ª–∞–º
                - hidden md:block: —Å–∫—Ä—ã—Ç—ã –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
                - transform rotate-XX: –ø–æ–≤–æ—Ä–æ—Ç—ã
                - -left/right-[215px]: –æ—Ç—Å—Ç—É–ø—ã –æ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */}
            <Image
              src="/icons/lightning.png"
              alt="lightning"
              width={190}
              height={190}
              className="absolute -left-[215px] -top-[50px] transform -rotate-45 hidden md:block"
            />
            <Image
              src="/icons/lightning.png"
              alt="lightning"
              width={190}
              height={190}
              className="absolute -right-[215px] -top-[50px] transform rotate-45 hidden md:block"
            />
            <Image
              src="/icons/lightning.png"
              alt="lightning"
              width={190}
              height={190}
              className="absolute -left-[215px] -bottom-[50px] transform -rotate-45 hidden md:block"
            />
            <Image
              src="/icons/lightning.png"
              alt="lightning"
              width={190}
              height={190}
              className="absolute -right-[215px] -bottom-[50px] transform rotate-45 hidden md:block"
            />
            
            {/* –ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"
                - flex justify-end: –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –≤–ø—Ä–∞–≤–æ
                - mb-6: –æ—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É 1.5rem (24px) */}
            <div className="flex justify-end mb-6">
              {currentStep > 0 && (
                <Button
                  onClick={handleReset}
                  variant="primary"
                  className="bg-[#FF4B26] text-white px-4 py-2 rounded-full hover:bg-[#FF0000] transition-all"
                >
                  –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ
                </Button>
              )}
            </div>

            {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
                –ê–Ω–∏–º–∞—Ü–∏—è:
                - –ü–æ—è–≤–ª–µ–Ω–∏–µ: —Å–¥–≤–∏–≥ —Å–Ω–∏–∑—É –Ω–∞ 20px —Å –ø–æ—è–≤–ª–µ–Ω–∏–µ–º
                - –ò—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ: —Å–¥–≤–∏–≥ –≤–≤–µ—Ä—Ö –Ω–∞ 20px —Å –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ–º */}
            <AnimatePresence mode="wait">
              <motion.div
                key={`${currentStep}-${currentQuestion}`}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -20 }}
                className="space-y-6"
              >
                {renderContent()}
              </motion.div>
            </AnimatePresence>

            {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —ç–º–æ–¥–∑–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ */}
            {instrumentEmojis.map((item, index) => (
              <AnimatedEmoji
                key={index}
                emoji={item.emoji}
                className={item.className}
              />
            ))}
          </div>
        </div>
      </div>
    </section>
  );
}
